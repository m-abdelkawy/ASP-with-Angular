@model Hacienda.Task.MVC.ViewModels.PersonFormViewModel

@{
    /**/

    /**/

    /**/

    /**/

    ViewBag.Title = "PersonForm";
}

<html ng-app="personAppMod">
<head>

</head>

<body ng-controller="personController">
    <h2>Create</h2>

    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/JSFiles/personApp.js"></script>
    <script src="~/JSFiles/personController.js"></script>


    @using (Html.BeginForm("Save", "People"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Person</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", ng_model = "person.name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", ng_model = "person.birthdate" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Countries, "CountryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CountryId, ViewBag.CountryList as SelectList, "Select Country", new { @class = "form-control", ng_model = "person.countryId" })
                    @Html.ValidationMessageFor(model => model.Countries, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.CityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Cities, new SelectList(Model.Cities, "id", "Name"), "Select City", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Cities, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.CityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CityId, new SelectList(""), "Select City", new { @class = "form-control", ng_model = "person.CityId" })
                    @Html.ValidationMessageFor(model => model.Cities, "", new { @class = "text-danger" })
                </div>
            </div>

            <script>
                $(document).ready(function () {
                    $("#CountryId").change(function () {
                        var countryId = $(this).val();
                        debugger
                        $.ajax({
                            type: "POST",
                            url: "GetCitiesddl/?cid=" + countryId,
                            contentType: "html",
                            success: function (response) {
                                debugger
                                $("#CityId").empty();
                                $("#CityId").append(response);
                                console.log(response);
                            }

                        });
                    });
                });
            </script>

            <div class="form-group">
                @Html.LabelFor(model => model.GenderId, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "form-control", ng_model = "person.genderId" })
                    @Html.ValidationMessageFor(model => model.Genders, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", ng_model = "person.image" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.HiddenFor(m => m.Id)
                    @*@Html.AntiForgeryToken()*@
                    <input type="button" value="Create" ng-click="savePerson(person)" class="btn btn-default" />
                    <input type="button" value="GetPeople" ng-click="getPeople()" class="btn btn-default" />
                    <input type="button" value="GetPeopleById" ng-click="getById(1)" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


</body>
</html>
